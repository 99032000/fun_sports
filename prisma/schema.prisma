datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model user {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email          String           @unique
  name           String?
  phone          String?          @unique
  active         Boolean          @default(true)
  Social_events  social_event[]
  Social_booking social_booking[]
  wechatId       String?
  created_at     DateTime         @default(now())
  updated_at     DateTime         @default(now()) @updatedAt
  Organization   organization[]
}

model organization {
  id       Int     @id @default(autoincrement())
  name     String  @unique
  owner    user    @relation(fields: [userId], references: [id])
  wechatId String
  phone    String? @unique
  userId   String  @db.Uuid
}

model social_event {
  id             Int              @id @default(autoincrement())
  name           String
  address        String
  venue_name     String
  date           DateTime         @db.Timestamp(0)
  owner          user?            @relation(fields: [ownerId], references: [id])
  ownerId        String           @db.Uuid
  booking_groups Json
  created_at     DateTime         @default(now())
  updated_at     DateTime         @default(now()) @updatedAt
  Social_booking social_booking[]
}

model social_booking {
  id              Int          @id @default(autoincrement())
  social_events   social_event @relation(fields: [social_eventsId], references: [id])
  user            user         @relation(fields: [userId], references: [id])
  created_at      DateTime     @default(now())
  updated_at      DateTime     @default(now()) @updatedAt
  social_eventsId Int
  userId          String       @db.Uuid
}

model payments {
  id    Int    @id @default(autoincrement())
  type  String @unique
  image String
}
